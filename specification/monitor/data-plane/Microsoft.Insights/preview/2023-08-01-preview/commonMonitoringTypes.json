{
    "swagger": "2.0",
    "info": {
      "version": "2023-08-01-preview",
      "title": "Common Monitoring types"
    },
    "paths": {},
    "parameters": {
      "MetricNamesParameter": {
        "name": "metricnames",
        "in": "query",
        "required": true,
        "type": "array",
        "items": {
          "type": "string"
        },
        "collectionFormat": "csv",
        "description": "The names of the metrics (comma separated) to retrieve.",
        "x-ms-parameter-location": "method"
      },
      "AggregationsParameter": {
        "name": "aggregation",
        "in": "query",
        "required": false,
        "type": "array",
        "items": {
          "type": "string"
        },
        "collectionFormat": "csv",
        "description": "The list of aggregation types (comma separated) to retrieve.\n*Examples: average, minimum, maximum, total, count*",
        "x-ms-parameter-location": "method"
      },
      "StartTimeParameter": {
        "name": "startTime",
        "in": "query",
        "required": false,
        "type": "string",
        "format": "date-time",
        "description": "The start time of the query. It is a string in the format 'yyyy-MM-ddTHH:mm:ss.fffZ'. If you have specified the endTime parameter, then this parameter is required.\nIf only startTime is specified, then endTime defaults to the current time.\nIf no time interval is specified, the default is 1 hour.",
        "x-ms-parameter-location": "method"
      },
      "EndTimeParameter": {
        "name": "endTime",
        "in": "query",
        "required": false,
        "type": "string",
        "format": "date-time",
        "description": "The end time of the query. It is a string in the format 'yyyy-MM-ddTHH:mm:ss.fffZ'.",
        "x-ms-parameter-location": "method"
      },
      "TopParameter": {
        "name": "top",
        "in": "query",
        "required": false,
        "type": "integer",
        "format": "int32",
        "description": "The maximum number of records to retrieve per resource ID in the request.\nValid only if filter is specified.\nDefaults to 10.",
        "x-ms-parameter-location": "method"
      },
      "OrderByParameter": {
        "name": "orderby",
        "in": "query",
        "required": false,
        "type": "string",
        "description": "The aggregation to use for sorting results and the direction of the sort.\nOnly one order can be specified.\n*Examples: sum asc*",
        "x-ms-parameter-location": "method"
      },
      "FilterParameter": {
        "name": "filter",
        "in": "query",
        "required": false,
        "type": "string",
        "description": "The filter is used to reduce the set of metric data returned.<br>Example:<br>Metric contains metadata A, B and C.<br>- Return all time series of C where A = a1 and B = b1 or b2<br>**filter=A eq ‘a1’ and B eq ‘b1’ or B eq ‘b2’ and C eq ‘*’**<br>- Invalid variant:<br>**filter=A eq ‘a1’ and B eq ‘b1’ and C eq ‘*’ or B = ‘b2’**<br>This is invalid because the logical or operator cannot separate two different metadata names.<br>- Return all time series where A = a1, B = b1 and C = c1:<br>**filter=A eq ‘a1’ and B eq ‘b1’ and C eq ‘c1’**<br>- Return all time series where A = a1<br>**filter=A eq ‘a1’ and B eq ‘*’ and C eq ‘*’**.",
        "x-ms-parameter-location": "method"
      }
    },
    "definitions": {
      "MetricUnit": {
        "type": "string",
        "description": "The unit of the metric.",
        "enum": [
          "Count",
          "Bytes",
          "Seconds",
          "CountPerSecond",
          "BytesPerSecond",
          "Percent",
          "MilliSeconds",
          "ByteSeconds",
          "Unspecified",
          "Cores",
          "MilliCores",
          "NanoCores",
          "BitsPerSecond"
        ],
        "x-ms-enum": {
          "name": "MetricUnit",
          "modelAsString": false,
          "values": [
            {
              "value": "Count",
              "description": "Unit of raw quantity."
            },
            {
              "value": "Bytes",
              "description": "Unit of memory in bytes."
            },
            {
              "value": "Seconds",
              "description": "Unit of time in seconds."
            },
            {
              "value": "CountPerSecond",
              "description": "Rate unit of raw quantity per second."
            },
            {
              "value": "BytesPerSecond",
              "description": "Rate unit of memory in bytes per second."
            },
            {
              "value": "Percent",
              "description": "Percentage unit."
            },
            {
              "value": "MilliSeconds",
              "description": "Unit of time in 1/1000th of a second."
            },
            {
              "value": "ByteSeconds",
              "description": "Unit of data transfer or storage. It is the size of the data in bytes multiplied by the time it takes to transfer or store the data in seconds."
            },
            {
              "value": "Unspecified",
              "description": "No specified unit."
            },
            {
              "value": "Cores",
              "description": "Unit of processing power."
            },
            {
              "value": "MilliCores",
              "description": "Unit of processing power in 1/1000th of a CPU core."
            },
            {
              "value": "NanoCores",
              "description": "Unit of processing power in one billionth of a CPU core."
            },
            {
              "value": "BitsPerSecond",
              "description": "Rate unit of binary digits per second."
            }
          ]
        }
      },
      "MetricAggregation": {
        "type": "string",
        "description": "Metric aggregation types",
        "enum": [
          "average",
          "minimum",
          "maximum",
          "total",
          "count"
        ],
        "x-ms-enum": {
          "name": "MetricAggregation",
          "modelAsString": true
        }
      }
    }
  }